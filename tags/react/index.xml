<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React on Gary talks tech</title>
    <link>https://gary-techs.github.io/tags/react/</link>
    <description>Recent content in React on Gary talks tech</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 20 Nov 2020 09:45:14 +0400</lastBuildDate>
    
	<atom:link href="https://gary-techs.github.io/tags/react/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Don&#39;t use context API for state management</title>
      <link>https://gary-techs.github.io/posts/context-react/</link>
      <pubDate>Fri, 20 Nov 2020 09:45:14 +0400</pubDate>
      
      <guid>https://gary-techs.github.io/posts/context-react/</guid>
      <description>React Context API is not a state management tool This may sound obvious, but React Context API is not a state management tool per-se.
What I mean is that the Context alone is not enough to manage application&amp;rsquo;s state without a companion hook like useState or useReducer.
Creating a Context To create a new Context in React we call createContext():
const MyContext = React.createContext(); Once a Context is in place we can provide an initial value to the Context Provider on the value prop:</description>
    </item>
    
  </channel>
</rss>